1. 可以直接根据中断号码，索引到IDT中的相应中断处理函数的入口。
    此处的实现中，硬件会为有的中断/异常压入一个错误码，而有的则不会，为了保持trapframe结构体的统一，没有错误码的
    中断/异常的处理函数会压入一个错误码0。
    如果所有的中断都仅由同一个处理函数，则该处理函数需要额外判断中断类型，决定是否需要压栈错误码，以及执行哪个处理函数。
    而最重要的特征是，不同的中断/异常的处理函数的DPL是不同的，如果只有一个处理函数，则无法为其设置合适的DPL。
2. user/softint期望触发一个缺页中断，而在内核的设计中，缺页中断由硬件（MMU）和操作系统共同决定是否触发，如果需要触发一个缺页中断，只
    能通过访问一个“未映射”的页，或者写一个无权写的页；
    因为无法通过int指令直接触发缺页中断，因此触发的是一个通用保护故障；
    内核通过缺页中断处理，向上层应用提供了一个幻象：当前拥有一整个可用的内存空间，实质上内核常采用按需调页的策略，只有当上层应用需要
    使用该部分内存时，才为其分配所需的内存页。缺页中断处理函数会检查用户程序是否逻辑上拥有该页内存，以及是否有权完成相应的操作（写、
    执行等）。
    如果用户线程可以通过指令触发缺页中断，则某个线程可以申请一块巨大的内存，然后不断通过触发缺页中断，使得内核为其分配物理页并完成
    映射，实质上该线程可能完全不会实质访问这些页，从而影响减少了可用物理页。线程通过这种方式影响了内核对物理内存的分配，这对其他线
    程的运行是会产生影响的，例如某些需要物理页的线程会不断触发缺页中断，而又没有可用的物理页，而不断将某些物理页换出，导致震荡。
    因此内核为IDT中的中断的条目设置了DPL，只有DPL为用户级中断/异常的才能在用户态中通过int指令触发。通过将T_PGFLT条目的DPL设为3，
    则用户程序可以通过int指令触发缺页中断。
3. 权限错误。需要将IDT的DPL设为用户级，因为断点中断并不会完成用户态到内核态的切换，如果DPL非用户级，则会触发通用保护故障。
4. 充分利用硬件提供的保护级别，限制用户程序的权限从而保护内核不被破坏或者被非法访问。